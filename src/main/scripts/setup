#!/usr/bin/env python
from setup_utils import *
import os
import socket

# r92

def uninstall():
    app = actions.getAppName("ijp.r92")
    if app: actions.asadmin("undeploy " + app)
    actions.asadmin("delete-jdbc-resource jdbc/r92", tolerant=True)
    actions.asadmin("delete-jdbc-connection-pool r92", tolerant=True)
    
actions, options, arg = getActions()
props = actions.getGlassfish("r92-setup.properties", ["dbProperties", "glassfish", "driver", "port"])

prop_name = "r92.properties"
prop_list = ["icat.url", "ids.url", "gangliaHost", "pbsnodes", "qsig", "qstat", "qsub", "prepareaccount",
"passwordDurationSeconds", "poolPrefix", "reader"]

if arg in ["CONFIGURE", "INSTALL"]:
    actions.configure(prop_name, prop_list) 
    r92Properties = actions.getProperties(prop_name, prop_list)
    actions.checkNoErrors()

if arg == "INSTALL":
    r92Properties = actions.getProperties(prop_name, prop_list)

    actions.installFile(prop_name)
    
    try:           
        uninstall()
        
        actions.asadmin('create-jdbc-connection-pool --datasourceclassname ' + props["driver"] + 
                ' --restype javax.sql.DataSource --failconnection=true --steadypoolsize 2' + 
                ' --maxpoolsize 32 --ping --property ' + props["dbProperties"] + ' r92', printOutput=True)
        
        actions.asadmin("create-jdbc-resource --connectionpoolid r92 jdbc/r92")
            
        actions.deploy("ijp.r92-*.war", deploymentorder=130)
        
       
                
    except Exception, e:
        abort(str(e))
                
if arg == "UNINSTALL":
    r92Properties = actions.getProperties(prop_name, prop_list)   
    actions.removeFile(prop_name)
 
    try:
        uninstall()
        
    except Exception, e:
        abort(str(e))       
    
            
    
